plugins {
    id "com.android.application"
    id "kotlin-android"
    id "dev.flutter.flutter-gradle-plugin"
    id "com.google.gms.google-services"
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file("local.properties")
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader("UTF-8") { reader ->
        localProperties.load(reader)
    }
}

configurations.all {
    resolutionStrategy {
        force 'androidx.lifecycle:lifecycle-livedata-core:2.6.2'
        force 'androidx.lifecycle:lifecycle-runtime:2.6.2'
        force 'androidx.lifecycle:lifecycle-common:2.6.2'
        force 'androidx.lifecycle:lifecycle-viewmodel:2.6.2'
        force 'androidx.appcompat:appcompat:1.7.0'
        force 'androidx.appcompat:appcompat:1.6.1'
        force 'androidx.appcompat:appcompat-resources:1.6.1'
        force 'com.google.errorprone:error_prone_annotations:2.18.0'
    }
}

android {
    namespace = "com.bannerx.app"
    compileSdk = flutter.compileSdkVersion
    ndkVersion = flutter.ndkVersion

    compileOptions {
        coreLibraryDesugaringEnabled true
        sourceCompatibility = JavaVersion.VERSION_11
        targetCompatibility = JavaVersion.VERSION_11
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_11.toString()
    }

    defaultConfig {
        applicationId = "com.bannerx.app"
        minSdk = 24
        targetSdk = 35
        versionCode = 1
        versionName = "1.0.0"
        multiDexEnabled true
    }

    signingConfigs {
        production {
            storeFile file(PRODUCTION_STORE_FILE)
            storePassword PRODUCTION_STORE_PASSWORD
            keyAlias PRODUCTION_KEY_ALIAS
            keyPassword PRODUCTION_KEY_PASSWORD
        }

        development {
            storeFile file(DEVELOPMENT_STORE_FILE)
            storePassword DEVELOPMENT_STORE_PASSWORD
            keyAlias DEVELOPMENT_KEY_ALIAS
            keyPassword DEVELOPMENT_KEY_PASSWORD
        }
    }

    buildTypes {
        def productionSigningVariable = signingConfigs.production
        def developmentSigningVariable = signingConfigs.development
        debug {
            signingConfig developmentSigningVariable
            debuggable true
        }

        release {
            minifyEnabled false
            shrinkResources false
            signingConfig productionSigningVariable
        }
    }
}

flutter {
    source = "../.."
}
dependencies {
    coreLibraryDesugaring 'com.android.tools:desugar_jdk_libs:2.1.4'

    implementation 'androidx.multidex:multidex:2.0.1'
    implementation fileTree(dir: "libs", include: ["*.aar"])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation platform('com.google.firebase:firebase-bom:31.1.1')
    implementation 'com.google.firebase:firebase-analytics'
    implementation "androidx.lifecycle:lifecycle-extensions:2.2.0"
    implementation "androidx.browser:browser:1.4.0"
    implementation "androidx.fragment:fragment:1.5.3"
    implementation "com.google.android.material:material:1.7.0"
}